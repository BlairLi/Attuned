{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Cornell API",
    "description": "Cornell spec for Swagger",
    "termsOfService": "http://swagger.io/terms/"
  },
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "User",
      "description": "API for User"
    },
    {
      "name": "Common",
      "description": "API for Common Usage"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "multipart/form-data"
  ],
  "produces": [
    "application/json"
  ],
  "paths":{
    "/verifyAccessCode":{
      "post": {
        "tags": [
          "User"
        ],
        "description": "Verify Access Code",
        "operationId": "Verify Access Code",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "accessCode",
            "in": "formData",
            "description": "access code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Access code verified",
            "schema": {
              "$ref": "#/definitions/verifyAccessCode200"
            }
          },
          "409": {
            "description": "Invalid Access code",
            "schema": {
              "$ref": "#/definitions/verifyAccessCode401"
            }
          }
        }
      }
    },
    "/signUp":{
      "post": {
        "tags": [
          "User"
        ],
        "description": "Sign Up",
        "operationId": "Sign Up",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "name",
            "in": "formData",
            "description": "User name",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Password",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "Email",
            "required": true,
            "type": "string"
          },
          {
            "name": "telephoneNumber",
            "in": "formData",
            "description": "Telephone Number",
            "required": false,
            "type": "string"
          },
          {
            "name": "admin",
            "in": "formData",
            "description": "0/1",
            "required": true,
            "type": "string"
          },
          {
            "name":"image",
            "in":"formData",
            "description":"profile pic",
            "required":false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully signed up. Please verify your email",
            "schema": {
              "$ref": "#/definitions/signUp200"
            }
          },
          "409": {
            "description": "User with this email already exists",
            "schema": {
              "$ref": "#/definitions/signUp409"
            }
          }
        }
      }
    },
    "/verifyEmailToken/{verifyEmailToken}":{
      "get": {
        "tags": [
          "User"
        ],
        "description": "Verify Email Token",
        "operationId": "Verify Email Token",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "access_token",
          "in": "header",
          "description": "access_token",
          "required": true,
          "type": "string",
          "default": "123456"
        }, {
          "name": "verifyEmailToken",
          "in": "path",
          "description": "email token",
          "required": true,
          "type": "string",
          "default": ""
        }],
        "responses": {
          "200": {
            "description": "Your email address is verified",
            "schema": {
              "$ref": "#/definitions/verifyEmailToken200"
            }
          },
          "401": {
            "description": "Invalid Token",
            "schema": {
              "$ref": "#/definitions/verifyEmailToken401"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Login",
        "operationId": "Login",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "email",
            "in": "formData",
            "description": "Email of the User",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Password of the User",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Logged In Successfully",
            "schema": {
              "$ref": "#/definitions/login200"
            }
          },
          "403": {
            "description": "Logged In Unauthorised",
            "schema": {
              "$ref": "#/definitions/login403"
            }
          }
        }
      }
    },
    "/forgotPassword": {
      "post": {
        "tags": [
          "Common"
        ],
        "description": "Forgot Password",
        "operationId": "Forgot Password",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "email",
            "in": "formData",
            "description": "Email of the User",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Reset link sent in email",
            "schema": {
              "$ref": "#/definitions/forgotPassword200"
            }
          },
          "403": {
            "description": "Email not found",
            "schema": {
              "$ref": "#/definitions/forgotPassword400"
            }
          }
        }
      }
    },
    "/resetPassword/{token}": {
      "get": {
        "tags": [
          "Common"
        ],
        "description": "Verify reset token",
        "operationId": "Verify reset token",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "password",
          "in": "formData",
          "description": "new password",
          "required": true,
          "type": "string",
          "default": "123456"
        }, {
          "name": "token",
          "in": "path",
          "description": "reset token",
          "required": true,
          "type": "string",
          "default": ""
        }, {
          "name": "confirmPassword",
          "in": "formData",
          "description": "confirm password",
          "required": true,
          "type": "string",
          "default": "123456"
        }],
        "responses": {
          "200": {
            "description": "Password Reset",
            "schema": {
              "$ref": "#/definitions/PasswordReset200"
            }
          },
          "401": {
            "description": "Token Expired",
            "schema": {
              "$ref": "#/definitions/PasswordReset401"
            }
          },
          "403": {
            "description": "Unothorised",
            "schema": {
              "$ref": "#/definitions/PasswordReset403"
            }
          }
        }
      }
    },
    "/getQuestionAnswers":{
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get Question Answer",
        "operationId": "Get Question Answer",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Question Answer are",
            "schema": {
              "$ref": "#/definitions/signUp200"
            }
          }
          }
        }
    },
    "/saveAnswer": {
        "post": {
          "tags": [
            "User"
          ],
          "description": "Save answers",
          "operationId": "Save answers",
          "produces": [
            "application/json"
          ],
          "parameters": [{
              "name": "access_token",
              "in": "header",
              "description": "Access token (Will receive on register api/login api response header)",
              "required": true,
              "type": "string"
            },
            {
              "name": "answer",
              "in": "formData",
              "description": "[{\"questionId\":\"5e5defd87843c3566f3faba2\",\"questionOptionId\":\"5e5df04e7843c3566f3faba5\"},{ \"questionId\":\"5e5deff87843c3566f3faba3\",\"questionOptionId\":\"5e5df0947843c3566f3faba8\"},{\"questionId\":\"5e5df00c7843c3566f3faba4\",\"otherAnswer\":\"Maybe\"}]",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Answers Saved Successfully",
              "schema": {
                "$ref": "#/definitions/saveAnswer200"
              }
            },
            "400": {
              "description": "Answers cannot be saved",
              "schema": {
                "$ref": "#/definitions/saveAnswer400"
              }
            },
            "401":{
              "description": "No such user found",
              "schema": {
                "$ref": "#/definitions/saveAnswer401"
              }
            }
          }
        }
    }
    },
    "definitions":{
    
    "saveAnswer200":{
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Answers Saved Successfully"
        },
        "data": {
          "type": "object",
          "example": {
          }
        }
      }
    },
    "saveAnswer400":{
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "400"
        },
        "message": {
          "type": "string",
          "example": "Answers cannot be saved"
        },
        "data": {
          "type": "object",
          "example": {
          }
        }
      }
    },
    "saveAnswer401":{
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "401"
        },
        "message": {
          "type": "string",
          "example": "No such user found"
        },
        "data": {
          "type": "object",
          "example": {
          }
        }
      }
    },
    "login200":{
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Loggied in Successfully"
        },
        "data": {
          "type": "object",
          "example": {
            "id": "5e4dc58f196c6b36601a9030",
            "email": "manish.mohit2110+6@gmail.com",
            "telephone": "8004624940",
            "name": "manish mishra",
            "answers": []
          }
        }
      }
    },
    "login403":{
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "403"
        },
        "message": {
          "type": "string",
          "example": "Wrong email or password"
        },
        "data": {
          "type": "object",
          "example": {
            "message": "You have entered incorrect email/password"
          }
        }
      }
    },
    "forgotPassword200":{
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Please check your email for reset link"
        },
        "data": {
          "type": "object",
          "example": {
            "status": true,
            "message": "Please check your email for reset link"
          }
        }
      }
    },
    "forgotPassword400":{
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "400"
        },
        "message": {
          "type": "string",
          "example": "User does not exists"
        },
        "data": {
          "type": "object",
          "example": {
            "status": true,
            "message": "User does not exists"
          }
        }
      }
    },
    "PasswordReset200":{
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Your password has been changed Successfully"
        },
        "data": {
          "type": "object",
          "example": {
            "status": false,
            "message": "Your password has been changed Successfully"
          }
        }
      }
    },
    "PasswordReset401":{
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "401"
        },
        "message": {
          "type": "string",
          "example": "Your token has expired"
        },
        "data": {
          "type": "object",
          "example": {
            "status": true,
            "message": "Your token has expired"
          }
        }
      }
    },
    "PasswordReset403":{
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "403"
        },
        "message": {
          "type": "string",
          "example": "Your token is invalid"
        },
        "data": {
          "type": "object",
          "example": {
            "status": false,
            "message": "Your token is invalid"
          }
        }
      }
    },
    "signUp200":{
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "User successfully signed up. Please verify your email"
        },
        "data": {
          "type": "object",
          "example": {
            "status": true,
            "message": ""
          }
        }
      }
    },
    "signUp409":{
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "409"
        },
        "message": {
          "type": "string",
          "example": "User with this email already exists"
        },
        "data": {
          "type": "object",
          "example": {
            "status": false,
            "message": ""
          }
        }
      }
    },
    "verifyAccessCode401":{
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "401"
        },
        "message": {
          "type": "string",
          "example": "Invalid Access code"
        },
        "data": {
          "type": "object",
          "example": {
            "status": true,
            "message": ""
          }
        }
      }
    },
    "verifyAccessCode200":{
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Access code verified"
        },
        "data": {
          "type": "object",
          "example": {
            "status": true,
            "message": ""
          }
        }
      }
    },
    "verifyEmailToken401":{
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "401"
        },
        "message": {
          "type": "string",
          "example": "Invalid Token"
        },
        "data": {
          "type": "object",
          "example": {
            "status": true,
            "message": ""
          }
        }
      }
    },
    "verifyEmailToken200":{
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Your email address is verified"
        },
        "data": {
          "type": "object",
          "example": {
            "status": true,
            "message": ""
          }
        }
      }
    }
  }
}